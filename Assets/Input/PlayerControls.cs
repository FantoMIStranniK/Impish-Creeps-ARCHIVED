//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Camera"",
            ""id"": ""d439ef67-3416-487d-b8b3-5a43c0a115e2"",
            ""actions"": [
                {
                    ""name"": ""SpeedUp"",
                    ""type"": ""Button"",
                    ""id"": ""30e34857-11db-410e-ab3d-4d6b3e52641f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""18174e70-0cb6-4db0-9cc4-abcced0a67e7"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""8f90f81a-0882-47a1-885a-f54291571778"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchCamera"",
                    ""type"": ""Button"",
                    ""id"": ""43d894a9-7259-4024-ac66-06caf814e706"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enable 7T tower"",
                    ""type"": ""Button"",
                    ""id"": ""1b1ab1ff-3441-47c6-b2b7-d879434ea663"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""aa83b7a2-79b1-4f27-bad5-79d5a982aea2"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Camera"",
                    ""action"": ""SpeedUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""5215222c-0907-40af-9867-5a9b74279e4d"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5a166409-ff77-4c38-8d26-7bc28201c8d3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Camera"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""23f68015-c562-4cda-a284-c2b1ffb37c8b"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Camera"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8611ed75-d77d-4fa1-bf24-658348ba1560"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Camera"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""647cbee6-a3cc-4585-bcc5-8f2710bb0656"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Camera"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""4a00cc44-051b-4fa2-ac6e-39401987c104"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Camera"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""cf326e66-1eee-48c4-b753-b1f60afd7f19"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Camera"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""43d6dda6-3bbd-4137-aef9-c8e23565784d"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ecfe1c9-823d-4a9e-9565-ea0e3ffaa145"",
                    ""path"": ""<Keyboard>/rightAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98836efc-4c6e-4a1c-961a-2e29f7af3390"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enable 7T tower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Towers"",
            ""id"": ""3e790966-4b79-489e-aa4c-aa79867d6203"",
            ""actions"": [
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""738fd747-5b55-4bc5-b95a-a783fe6e2906"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlaceTower"",
                    ""type"": ""Button"",
                    ""id"": ""b7a4119c-9f5c-469d-8c7a-606d0c0f95e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GetTower"",
                    ""type"": ""Value"",
                    ""id"": ""31f70500-2e04-47b6-a836-e8ae641078fc"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CancelPlacement"",
                    ""type"": ""Button"",
                    ""id"": ""a2d298ef-3e3d-4b8d-abc1-a4e242377578"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpgradeTower"",
                    ""type"": ""Button"",
                    ""id"": ""f9df04df-8b58-425f-b0e2-1f5df89e9ab9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f2ed6302-bc5f-4243-8588-5a32c26844c8"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19f77987-1903-4ba4-8878-5dfb002cb6ed"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlaceTower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4f2f21b-a5fa-4936-ba17-8405369ff08a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0)"",
                    ""groups"": """",
                    ""action"": ""GetTower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d3932e7-3446-4e01-a65a-564db8731967"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GetTower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49529cf1-cbbc-4358-9d6c-f23feff71223"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""GetTower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d56a791e-005a-4f25-880a-a1e915cb55f4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""GetTower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c15a0fbe-b27f-471d-92d8-18ebe45eb8ea"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""GetTower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5daa0e2-4840-47e6-ac1e-4724ccfb3441"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=5)"",
                    ""groups"": """",
                    ""action"": ""GetTower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42bec5f7-2a37-49f3-abba-efd1152f1bbd"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelPlacement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34ca08b5-2c05-4f18-9e9b-78809a1a1c18"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0)"",
                    ""groups"": """",
                    ""action"": ""UpgradeTower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6703b8db-02d4-4298-86c6-ee36a3abc818"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpgradeTower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a024cfde-b32d-4373-a8f7-a43b6de4c5fd"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""UpgradeTower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Camera"",
            ""bindingGroup"": ""Camera"",
            ""devices"": []
        }
    ]
}");
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_SpeedUp = m_Camera.FindAction("SpeedUp", throwIfNotFound: true);
        m_Camera_Move = m_Camera.FindAction("Move", throwIfNotFound: true);
        m_Camera_Look = m_Camera.FindAction("Look", throwIfNotFound: true);
        m_Camera_SwitchCamera = m_Camera.FindAction("SwitchCamera", throwIfNotFound: true);
        m_Camera_Enable7Ttower = m_Camera.FindAction("Enable 7T tower", throwIfNotFound: true);
        // Towers
        m_Towers = asset.FindActionMap("Towers", throwIfNotFound: true);
        m_Towers_MousePosition = m_Towers.FindAction("MousePosition", throwIfNotFound: true);
        m_Towers_PlaceTower = m_Towers.FindAction("PlaceTower", throwIfNotFound: true);
        m_Towers_GetTower = m_Towers.FindAction("GetTower", throwIfNotFound: true);
        m_Towers_CancelPlacement = m_Towers.FindAction("CancelPlacement", throwIfNotFound: true);
        m_Towers_UpgradeTower = m_Towers.FindAction("UpgradeTower", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera
    private readonly InputActionMap m_Camera;
    private List<ICameraActions> m_CameraActionsCallbackInterfaces = new List<ICameraActions>();
    private readonly InputAction m_Camera_SpeedUp;
    private readonly InputAction m_Camera_Move;
    private readonly InputAction m_Camera_Look;
    private readonly InputAction m_Camera_SwitchCamera;
    private readonly InputAction m_Camera_Enable7Ttower;
    public struct CameraActions
    {
        private @PlayerControls m_Wrapper;
        public CameraActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @SpeedUp => m_Wrapper.m_Camera_SpeedUp;
        public InputAction @Move => m_Wrapper.m_Camera_Move;
        public InputAction @Look => m_Wrapper.m_Camera_Look;
        public InputAction @SwitchCamera => m_Wrapper.m_Camera_SwitchCamera;
        public InputAction @Enable7Ttower => m_Wrapper.m_Camera_Enable7Ttower;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void AddCallbacks(ICameraActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraActionsCallbackInterfaces.Add(instance);
            @SpeedUp.started += instance.OnSpeedUp;
            @SpeedUp.performed += instance.OnSpeedUp;
            @SpeedUp.canceled += instance.OnSpeedUp;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @SwitchCamera.started += instance.OnSwitchCamera;
            @SwitchCamera.performed += instance.OnSwitchCamera;
            @SwitchCamera.canceled += instance.OnSwitchCamera;
            @Enable7Ttower.started += instance.OnEnable7Ttower;
            @Enable7Ttower.performed += instance.OnEnable7Ttower;
            @Enable7Ttower.canceled += instance.OnEnable7Ttower;
        }

        private void UnregisterCallbacks(ICameraActions instance)
        {
            @SpeedUp.started -= instance.OnSpeedUp;
            @SpeedUp.performed -= instance.OnSpeedUp;
            @SpeedUp.canceled -= instance.OnSpeedUp;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @SwitchCamera.started -= instance.OnSwitchCamera;
            @SwitchCamera.performed -= instance.OnSwitchCamera;
            @SwitchCamera.canceled -= instance.OnSwitchCamera;
            @Enable7Ttower.started -= instance.OnEnable7Ttower;
            @Enable7Ttower.performed -= instance.OnEnable7Ttower;
            @Enable7Ttower.canceled -= instance.OnEnable7Ttower;
        }

        public void RemoveCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // Towers
    private readonly InputActionMap m_Towers;
    private List<ITowersActions> m_TowersActionsCallbackInterfaces = new List<ITowersActions>();
    private readonly InputAction m_Towers_MousePosition;
    private readonly InputAction m_Towers_PlaceTower;
    private readonly InputAction m_Towers_GetTower;
    private readonly InputAction m_Towers_CancelPlacement;
    private readonly InputAction m_Towers_UpgradeTower;
    public struct TowersActions
    {
        private @PlayerControls m_Wrapper;
        public TowersActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MousePosition => m_Wrapper.m_Towers_MousePosition;
        public InputAction @PlaceTower => m_Wrapper.m_Towers_PlaceTower;
        public InputAction @GetTower => m_Wrapper.m_Towers_GetTower;
        public InputAction @CancelPlacement => m_Wrapper.m_Towers_CancelPlacement;
        public InputAction @UpgradeTower => m_Wrapper.m_Towers_UpgradeTower;
        public InputActionMap Get() { return m_Wrapper.m_Towers; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TowersActions set) { return set.Get(); }
        public void AddCallbacks(ITowersActions instance)
        {
            if (instance == null || m_Wrapper.m_TowersActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TowersActionsCallbackInterfaces.Add(instance);
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @PlaceTower.started += instance.OnPlaceTower;
            @PlaceTower.performed += instance.OnPlaceTower;
            @PlaceTower.canceled += instance.OnPlaceTower;
            @GetTower.started += instance.OnGetTower;
            @GetTower.performed += instance.OnGetTower;
            @GetTower.canceled += instance.OnGetTower;
            @CancelPlacement.started += instance.OnCancelPlacement;
            @CancelPlacement.performed += instance.OnCancelPlacement;
            @CancelPlacement.canceled += instance.OnCancelPlacement;
            @UpgradeTower.started += instance.OnUpgradeTower;
            @UpgradeTower.performed += instance.OnUpgradeTower;
            @UpgradeTower.canceled += instance.OnUpgradeTower;
        }

        private void UnregisterCallbacks(ITowersActions instance)
        {
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @PlaceTower.started -= instance.OnPlaceTower;
            @PlaceTower.performed -= instance.OnPlaceTower;
            @PlaceTower.canceled -= instance.OnPlaceTower;
            @GetTower.started -= instance.OnGetTower;
            @GetTower.performed -= instance.OnGetTower;
            @GetTower.canceled -= instance.OnGetTower;
            @CancelPlacement.started -= instance.OnCancelPlacement;
            @CancelPlacement.performed -= instance.OnCancelPlacement;
            @CancelPlacement.canceled -= instance.OnCancelPlacement;
            @UpgradeTower.started -= instance.OnUpgradeTower;
            @UpgradeTower.performed -= instance.OnUpgradeTower;
            @UpgradeTower.canceled -= instance.OnUpgradeTower;
        }

        public void RemoveCallbacks(ITowersActions instance)
        {
            if (m_Wrapper.m_TowersActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITowersActions instance)
        {
            foreach (var item in m_Wrapper.m_TowersActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TowersActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TowersActions @Towers => new TowersActions(this);
    private int m_CameraSchemeIndex = -1;
    public InputControlScheme CameraScheme
    {
        get
        {
            if (m_CameraSchemeIndex == -1) m_CameraSchemeIndex = asset.FindControlSchemeIndex("Camera");
            return asset.controlSchemes[m_CameraSchemeIndex];
        }
    }
    public interface ICameraActions
    {
        void OnSpeedUp(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnSwitchCamera(InputAction.CallbackContext context);
        void OnEnable7Ttower(InputAction.CallbackContext context);
    }
    public interface ITowersActions
    {
        void OnMousePosition(InputAction.CallbackContext context);
        void OnPlaceTower(InputAction.CallbackContext context);
        void OnGetTower(InputAction.CallbackContext context);
        void OnCancelPlacement(InputAction.CallbackContext context);
        void OnUpgradeTower(InputAction.CallbackContext context);
    }
}
